{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/antho/Desktop/ShopAR/components/general_components/card/Accordion.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { motion, AnimatePresence } from \"framer-motion\";\n\nconst Accordion = ({\n  i,\n  expanded,\n  setExpanded\n}) => {\n  const isOpen = i === expanded; // By using `AnimatePresence` to mount and unmount the contents, we can animate\n  // them in and out while also only rendering the contents of open accordions\n\n  return __jsx(React.Fragment, null, __jsx(motion.header, {\n    initial: false,\n    animate: {\n      backgroundColor: isOpen ? \"#FF0088\" : \"#0055FF\"\n    },\n    onClick: () => setExpanded(isOpen ? false : i),\n    style: {\n      height: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }\n  }), __jsx(AnimatePresence, {\n    initial: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, isOpen && __jsx(motion.section, {\n    key: \"content\",\n    initial: \"collapsed\",\n    animate: \"open\",\n    exit: \"collapsed\",\n    variants: {\n      open: {\n        opacity: 1,\n        height: \"auto\"\n      },\n      collapsed: {\n        opacity: 0,\n        height: 0\n      }\n    },\n    transition: {\n      duration: 0.8,\n      ease: [0.04, 0.62, 0.23, 0.98]\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 11\n    }\n  }, __jsx(\"img\", {\n    src: \"/images/codehat.png\",\n    alt: \"Code\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }))));\n};\n\nexport default Accordion;","map":{"version":3,"sources":["/mnt/c/Users/antho/Desktop/ShopAR/components/general_components/card/Accordion.jsx"],"names":["motion","AnimatePresence","Accordion","i","expanded","setExpanded","isOpen","backgroundColor","height","open","opacity","collapsed","duration","ease"],"mappings":";;;AAAA,SAASA,MAAT,EAAiBC,eAAjB,QAAwC,eAAxC;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,CAAF;AAAKC,EAAAA,QAAL;AAAeC,EAAAA;AAAf,CAAD,KAAkC;AAClD,QAAMC,MAAM,GAAGH,CAAC,KAAKC,QAArB,CADkD,CAGlD;AACA;;AACA,SACE,4BACE,MAAC,MAAD,CAAQ,MAAR;AACE,IAAA,OAAO,EAAE,KADX;AAEE,IAAA,OAAO,EAAE;AAAEG,MAAAA,eAAe,EAAED,MAAM,GAAG,SAAH,GAAe;AAAxC,KAFX;AAGE,IAAA,OAAO,EAAE,MAAMD,WAAW,CAACC,MAAM,GAAG,KAAH,GAAWH,CAAlB,CAH5B;AAIE,IAAA,KAAK,EAAE;AAACK,MAAAA,MAAM,EAAC;AAAR,KAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAOE,MAAC,eAAD;AAAiB,IAAA,OAAO,EAAE,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,MAAM,IACL,MAAC,MAAD,CAAQ,OAAR;AACE,IAAA,GAAG,EAAC,SADN;AAEE,IAAA,OAAO,EAAC,WAFV;AAGE,IAAA,OAAO,EAAC,MAHV;AAIE,IAAA,IAAI,EAAC,WAJP;AAKE,IAAA,QAAQ,EAAE;AACRG,MAAAA,IAAI,EAAE;AAAEC,QAAAA,OAAO,EAAE,CAAX;AAAcF,QAAAA,MAAM,EAAE;AAAtB,OADE;AAERG,MAAAA,SAAS,EAAE;AAAED,QAAAA,OAAO,EAAE,CAAX;AAAcF,QAAAA,MAAM,EAAE;AAAtB;AAFH,KALZ;AASE,IAAA,UAAU,EAAE;AAAEI,MAAAA,QAAQ,EAAE,GAAZ;AAAiBC,MAAAA,IAAI,EAAE,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB;AAAvB,KATd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAWE;AAAK,IAAA,GAAG,EAAC,qBAAT;AAA+B,IAAA,GAAG,EAAC,MAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,CAFJ,CAPF,CADF;AA2BD,CAhCD;;AAkCA,eAAeX,SAAf","sourcesContent":["import { motion, AnimatePresence } from \"framer-motion\";\r\n\r\nconst Accordion = ({ i, expanded, setExpanded }) => {\r\n  const isOpen = i === expanded;\r\n\r\n  // By using `AnimatePresence` to mount and unmount the contents, we can animate\r\n  // them in and out while also only rendering the contents of open accordions\r\n  return (\r\n    <>\r\n      <motion.header\r\n        initial={false}\r\n        animate={{ backgroundColor: isOpen ? \"#FF0088\" : \"#0055FF\" }}\r\n        onClick={() => setExpanded(isOpen ? false : i)}\r\n        style={{height:\"20px\"}}\r\n      />\r\n      <AnimatePresence initial={false}>\r\n        {isOpen && (\r\n          <motion.section\r\n            key=\"content\"\r\n            initial=\"collapsed\"\r\n            animate=\"open\"\r\n            exit=\"collapsed\"\r\n            variants={{\r\n              open: { opacity: 1, height: \"auto\" },\r\n              collapsed: { opacity: 0, height: 0 },\r\n            }}\r\n            transition={{ duration: 0.8, ease: [0.04, 0.62, 0.23, 0.98] }}\r\n          >\r\n            <img src=\"/images/codehat.png\" alt=\"Code\" />\r\n          </motion.section>\r\n        )}\r\n      </AnimatePresence>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Accordion;\r\n"]},"metadata":{},"sourceType":"module"}