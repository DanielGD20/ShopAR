{"ast":null,"code":"// import { motion, AnimatePresence } from \"framer-motion\";\n// import images from \"../../src/js/image-data\";\n// import { useState } from \"react\";\n// import { wrap } from \"@popmotion/popcorn\";\n// const variants = {\n//   enter: (direction) => {\n//     return {\n//       x: direction > 0 ? 1000 : -1000,\n//       opacity: 0,\n//     };\n//   },\n//   center: {\n//     zIndex: 1,\n//     x: 0,\n//     opacity: 1,\n//   },\n//   exit: (direction) => {\n//     return {\n//       zIndex: 0,\n//       x: direction < 0 ? 1000 : -1000,\n//       opacity: 0,\n//     };\n//   },\n// };\n// const Banner = () => {\n//   const [[page, direction], setPage] = useState([0, 0]);\n//   const imageIndex = wrap(0, images.length, page);\n//   const paginate = (newDirection) => {\n//     setPage([page + newDirection, newDirection]);\n//   };\n//   return (\n//     <>\n//       <AnimatePresence initial={false} custom={direction}>\n//         <motion.img\n//           key={page}\n//           src={images[imageIndex]}\n//           custom={direction}\n//           variants={variants}\n//           initial=\"enter\"\n//           animate=\"center\"\n//           exit=\"exit\"\n//           transition={{\n//             x: { type: \"spring\", stiffness: 300, damping: 200 },\n//             opacity: { duration: 0.2 },\n//           }}\n//           drag=\"x\"\n//           dragConstraints={{ left: 0, right: 0 }}\n//           dragElastic={1}\n//           onDragEnd={(e, { offset, velocity }) => {\n//             const swipe = swipePower(offset.x, velocity.x);\n//             if (swipe < -swipeConfidenceThreshold) {\n//               paginate(1);\n//             } else if (swipe > swipeConfidenceThreshold) {\n//               paginate(-1);\n//             }\n//           }}\n//         />\n//       </AnimatePresence>\n//       <div className=\"next\" onClick={() => paginate(1)}>\n//         {\"‣\"}\n//       </div>\n//       <div className=\"prev\" onClick={() => paginate(-1)}>\n//         {\"‣\"}\n//       </div>\n//     </>\n//   );\n// };\n// const swipeConfidenceThreshold = 10000;\n// const swipePower = (offset, velocity) => {\n//   return Math.abs(offset) * velocity;\n// };\n// export default Banner;","map":{"version":3,"sources":["/mnt/c/Users/antho/Desktop/ShopAR/components/general_components/banner.jsx"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA","sourcesContent":["// import { motion, AnimatePresence } from \"framer-motion\";\n// import images from \"../../src/js/image-data\";\n// import { useState } from \"react\";\n// import { wrap } from \"@popmotion/popcorn\";\n\n// const variants = {\n//   enter: (direction) => {\n//     return {\n//       x: direction > 0 ? 1000 : -1000,\n//       opacity: 0,\n//     };\n//   },\n//   center: {\n//     zIndex: 1,\n//     x: 0,\n//     opacity: 1,\n//   },\n//   exit: (direction) => {\n//     return {\n//       zIndex: 0,\n//       x: direction < 0 ? 1000 : -1000,\n//       opacity: 0,\n//     };\n//   },\n// };\n\n// const Banner = () => {\n//   const [[page, direction], setPage] = useState([0, 0]);\n//   const imageIndex = wrap(0, images.length, page);\n//   const paginate = (newDirection) => {\n//     setPage([page + newDirection, newDirection]);\n//   };\n//   return (\n//     <>\n//       <AnimatePresence initial={false} custom={direction}>\n//         <motion.img\n//           key={page}\n//           src={images[imageIndex]}\n//           custom={direction}\n//           variants={variants}\n//           initial=\"enter\"\n//           animate=\"center\"\n//           exit=\"exit\"\n//           transition={{\n//             x: { type: \"spring\", stiffness: 300, damping: 200 },\n//             opacity: { duration: 0.2 },\n//           }}\n//           drag=\"x\"\n//           dragConstraints={{ left: 0, right: 0 }}\n//           dragElastic={1}\n//           onDragEnd={(e, { offset, velocity }) => {\n//             const swipe = swipePower(offset.x, velocity.x);\n\n//             if (swipe < -swipeConfidenceThreshold) {\n//               paginate(1);\n//             } else if (swipe > swipeConfidenceThreshold) {\n//               paginate(-1);\n//             }\n//           }}\n//         />\n//       </AnimatePresence>\n//       <div className=\"next\" onClick={() => paginate(1)}>\n//         {\"‣\"}\n//       </div>\n//       <div className=\"prev\" onClick={() => paginate(-1)}>\n//         {\"‣\"}\n//       </div>\n//     </>\n//   );\n// };\n\n// const swipeConfidenceThreshold = 10000;\n// const swipePower = (offset, velocity) => {\n//   return Math.abs(offset) * velocity;\n// };\n\n// export default Banner;\n"]},"metadata":{},"sourceType":"script"}